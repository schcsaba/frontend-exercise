{"mappings":"AAAA,IAAMA,QAAU,uCAEVC,WAAa,SAACC,EAAWC,OACvBC,EADgCC,EAAMC,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGE,EAAIF,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAQH,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAQJ,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGK,EAAKL,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAE1FM,EAAU,IAAIC,eAChBL,GAAQC,GAA0B,IAAbC,GAA+B,IAAbA,GACvCE,EAAQE,KAAK,MAAQ,GAAkCC,OAAhCf,QAAQ,0BAA6De,OAArCC,mBAAmBR,GAAM,cAAqDO,OAAzCC,mBAAmBP,GAAU,cAAyCM,OAA7BC,mBAAmBN,KAAa,GACrKN,EAAO,GAAkCW,OAAhCf,QAAQ,0BAA6De,OAArCC,mBAAmBR,GAAM,cAAqDO,OAAzCC,mBAAmBP,GAAU,cAAmDM,OAAvCC,mBAAmBN,GAAU,YAAqCK,OAA3BC,mBAAmBX,MAEjLO,EAAQE,KAAK,MAAQ,GAAUC,OAARf,QAAQ,cAAY,GAC3CI,EAAO,GAA6BW,OAA3Bf,QAAQ,qBAA8Ce,OAA3BC,mBAAmBX,KAE3DO,EAAQK,iBAAiB,oBAAoB,WACzC,GAAIL,EAAQM,aAAeL,eAAeM,KACtC,GAAuB,MAAnBP,EAAQQ,OAAgB,CACxB,IAAMC,EAAWC,KAAKC,MAAMX,EAAQY,cAChCH,EAASI,MAAQpB,EAAS,KAC1BM,EAAQU,EAASI,MAAQpB,GAE7B,IAAMqB,EAAW,IAAIb,eACrBa,EAASZ,KAAK,MAAOV,EAAO,UAAmCW,OAA1BC,mBAAmBL,KAAU,GAClEe,EAAST,iBAAiB,oBAAoB,WAC1C,GAAIS,EAASR,aAAeL,eAAeM,KACvC,GAAwB,MAApBO,EAASN,OAAgB,CACzB,IAAMO,EAAYL,KAAKC,MAAMG,EAASF,cACtCtB,EAAUyB,QACP,GAAwB,MAApBD,EAASN,OAAgB,CAChC,IAAMQ,EAAYN,KAAKC,MAAMG,EAASF,cACtCrB,EAAQyB,EAAUC,YAElB1B,EAAQ,qCAIpBuB,EAASI,YACN,GAAuB,MAAnBlB,EAAQQ,OAAgB,CAC/B,IAAMW,EAAWT,KAAKC,MAAMX,EAAQY,cACpCrB,EAAQ4B,EAASF,YAEjB1B,EAAQ,qCAIpBS,EAAQkB,QAGNE,iBAAmB,SAACC,EAAI/B,EAAWC,GACrC,IAAMS,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAQ,GAAqBC,OAAnBf,QAAQ,aAAkCe,OAAvBC,mBAAmBiB,KAAO,GACpErB,EAAQK,iBAAiB,oBAAoB,WACzC,GAAIL,EAAQM,aAAeL,eAAeM,KACtC,GAAuB,MAAnBP,EAAQQ,OAAgB,CACxB,IAAMC,EAAWC,KAAKC,MAAMX,EAAQY,cACpCtB,EAAUmB,QACP,GAAuB,MAAnBT,EAAQQ,OAAgB,CAC/B,IAAMO,EAAWL,KAAKC,MAAMX,EAAQY,cACpCrB,EAAQwB,EAASE,YAEjB1B,EAAQ,qCAIpBS,EAAQkB","sources":["src/js/api.js"],"sourcesContent":["const API_URL = \"https://ecf-dwwm.cefim-formation.org\";\r\n\r\nconst apiGetJobs = (onSuccess, onError, offset = 0, text = '', location = '', fulltime = 2, limit = 12) => {\r\n    let url;\r\n    const request = new XMLHttpRequest();\r\n    if (text || location || (fulltime === 1 || fulltime === 0)) {\r\n        request.open(\"GET\", `${API_URL}/api/jobs/search?text=${encodeURIComponent(text)}&location=${encodeURIComponent(location)}&fulltime=${encodeURIComponent(fulltime)}`, true);\r\n        url = `${API_URL}/api/jobs/search?text=${encodeURIComponent(text)}&location=${encodeURIComponent(location)}&fulltime=${encodeURIComponent(fulltime)}&offset=${encodeURIComponent(offset)}`;\r\n    } else {\r\n        request.open(\"GET\", `${API_URL}/api/jobs`, true);\r\n        url = `${API_URL}/api/jobs?offset=${encodeURIComponent(offset)}`;\r\n    }\r\n    request.addEventListener(\"readystatechange\", function() {\r\n        if (request.readyState === XMLHttpRequest.DONE) {\r\n            if (request.status === 200) {\r\n                const response = JSON.parse(request.responseText);\r\n                if (response.total - offset < 12) {\r\n                    limit = response.total - offset;\r\n                }\r\n                const request2 = new XMLHttpRequest();\r\n                request2.open(\"GET\", url + `&limit=${encodeURIComponent(limit)}`, true);\r\n                request2.addEventListener(\"readystatechange\", function() {\r\n                    if (request2.readyState === XMLHttpRequest.DONE) {\r\n                        if (request2.status === 200) {\r\n                            const response2 = JSON.parse(request2.responseText);\r\n                            onSuccess(response2);\r\n                        } else if (request2.status === 400) {\r\n                            const response2 = JSON.parse(request2.responseText);\r\n                            onError(response2.error);\r\n                        } else {\r\n                            onError(\"An unknown error has occurred!\");\r\n                        }\r\n                    }\r\n                });\r\n                request2.send();\r\n            } else if (request.status === 400) {\r\n                const response = JSON.parse(request.responseText);\r\n                onError(response.error);\r\n            } else {\r\n                onError(\"An unknown error has occurred!\");\r\n            }\r\n        }\r\n    });\r\n    request.send();\r\n};\r\n\r\nconst apiGetJobDetails = (id, onSuccess, onError) => {\r\n    const request = new XMLHttpRequest();\r\n    request.open(\"GET\", `${API_URL}/api/job/${encodeURIComponent(id)}`, true);\r\n    request.addEventListener(\"readystatechange\", function() {\r\n        if (request.readyState === XMLHttpRequest.DONE) {\r\n            if (request.status === 200) {\r\n                const response = JSON.parse(request.responseText);\r\n                onSuccess(response);\r\n            } else if (request.status === 404) {\r\n                const response = JSON.parse(request.responseText);\r\n                onError(response.error);\r\n            } else {\r\n                onError(\"An unknown error has occurred!\");\r\n            }\r\n        }\r\n    });\r\n    request.send();\r\n};"],"names":["API_URL","apiGetJobs","onSuccess","onError","url","offset","arguments","length","text","location","fulltime","limit","request","XMLHttpRequest","open","concat","encodeURIComponent","addEventListener","readyState","DONE","status","response","JSON","parse","responseText","total","request2","response2","response21","error","send","response1","apiGetJobDetails","id"],"version":3,"file":"index.96f008c5.js.map"}